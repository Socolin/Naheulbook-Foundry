# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
    tags: [ v* ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - name: Upload build
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: naheulbook-foundry # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: dist/**
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error
      - name: Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - run: cd dist && zip -r ../dist.zip ./
        if: startsWith(github.ref, 'refs/tags/v')
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: module.zip
          asset_content_type: application/zip
